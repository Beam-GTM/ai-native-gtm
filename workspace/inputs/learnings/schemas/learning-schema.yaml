# Learning Input Schema
# Defines the structure for learning submissions to the analysis pipeline

schema:
  version: "1.0"
  type: learning_submission
  
learning_format:
  required_fields:
    id:
      type: string
      pattern: "^learning-[0-9]{4}-[0-9]{2}-[0-9]{2}-[0-9]{3}$"
      description: "Unique identifier for the learning"
      example: "learning-2025-01-27-001"
    
    timestamp:
      type: datetime
      format: "ISO-8601"
      description: "When the learning was observed"
      example: "2025-01-27T10:30:00Z"
    
    pattern:
      type: string
      min_length: 10
      max_length: 500
      description: "The pattern or issue observed"
      example: "Users consistently struggle with finding the workflow menu"
    
    context:
      type: string
      min_length: 20
      max_length: 1000
      description: "The context in which this was observed"
      example: "During onboarding of 5 new users, all asked where to find workflows"
    
    impact:
      type: object
      properties:
        severity:
          type: integer
          min: 1
          max: 10
          description: "Severity of the issue (1=low, 10=critical)"
        
        frequency:
          type: integer
          min: 1
          description: "Number of occurrences observed"
        
        users_affected:
          type: string
          description: "Estimate of users affected"
          enum: ["single", "few", "many", "all"]
    
    category:
      type: string
      enum:
        - "usability"
        - "performance"
        - "functionality"
        - "documentation"
        - "integration"
        - "security"
        - "workflow"
        - "configuration"
        - "other"
  
  optional_fields:
    source:
      type: string
      description: "Where this learning came from"
      examples: ["template-execution", "user-feedback", "monitoring", "testing"]
    
    template_version:
      type: string
      description: "Version of template if from execution"
      example: "nexus-v3.2.1"
    
    workaround:
      type: string
      description: "Any workaround discovered"
      example: "Added custom menu item to make workflows more visible"
    
    suggested_solution:
      type: string
      description: "Proposed fix for the issue"
      example: "Add workflows to main menu with icon"
    
    evidence:
      type: array
      items:
        type: string
      description: "Links or references to evidence"
      example: ["logs/session-123.log", "screenshots/menu-confusion.png"]
    
    tags:
      type: array
      items:
        type: string
      description: "Additional categorization tags"
      example: ["onboarding", "ux", "menu", "discoverability"]
    
    priority_override:
      type: string
      enum: ["critical", "high", "medium", "low"]
      description: "Manual priority override if needed"

validation_rules:
  - rule: "Pattern must be unique within 24-hour window"
  - rule: "Context must provide actionable information"
  - rule: "Impact severity must align with frequency"
  - rule: "Category must match pattern type"

example_submission:
  id: "learning-2025-01-27-042"
  timestamp: "2025-01-27T14:15:00Z"
  pattern: "Template detection failure in orchestrator activation"
  context: "Orchestrator loads project-brief.md but doesn't detect TEMPLATE-STATE markers, causing setup flow to be missed"
  impact:
    severity: 8
    frequency: 5
    users_affected: "many"
  category: "functionality"
  source: "template-execution"
  template_version: "nexus-v3.2.0"
  workaround: "Manually check for markers after loading"
  suggested_solution: "Add Step 7.5 to orchestrator activation to explicitly check for template triggers"
  evidence:
    - "sessions/2025-01-27-session-logs.md"
    - "core-learnings.md#learning-21"
  tags:
    - "orchestrator"
    - "template-detection"
    - "activation"
    - "critical-path"
  priority_override: "high"

processing_notes:
  batch_size: "Process when 10+ learnings accumulated"
  deduplication: "Check pattern similarity > 85% within category"
  aggregation: "Combine similar patterns for stronger evidence"
  validation: "Schema validation before processing"